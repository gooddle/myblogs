name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build project with Gradle
        run: ./gradlew bootJar

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker Images
        run: |
          docker build -t fiddl5920/myblog:app .
          docker push fiddl5920/myblog:app

          cd .mail
          docker build -t fiddl5920/myblog:mail .
          docker push fiddl5920/myblog:mail
          cd ..

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy using Docker Compose
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
                       
            # 환경 변수 설정
            export DB_URL=${{ secrets.DB_URL }}
            export DB_USERNAME=${{ secrets.DB_USERNAME }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export MAIL_HOST=${{ secrets.MAIL_HOST }}
            export MAIL_PORT=${{ secrets.MAIL_PORT }}
            export MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
            export MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
            export AUTH_JWT_ACCESSTOKENEXPIRATIONHOUR=${{ secrets.AUTH_JWT_ACCESSTOKENEXPIRATIONHOUR }}
            export AUTH_JWT_ISSUER=${{ secrets.AUTH_JWT_ISSUER }}
            export AUTH_JWT_SECRET=${{ secrets.AUTH_JWT_SECRET }}
            export DATA_REDIS_HOST=${{ secrets.DATA_REDIS_HOST }}
            export DATA_REDIS_PORT=${{ secrets.DATA_REDIS_PORT }}

            # 기존 컨테이너 중지 및 삭제
            docker-compose down || true

            # 최신 이미지 Pull
            docker-compose pull

            # 컨테이너 재시작
            docker-compose up -d

            # 실행 중인 컨테이너 확인
            docker ps